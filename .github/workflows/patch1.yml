name: PATCH1
on: 
  [push]
  # test scheduled workflow
  # schedule:
  #   - cron: "0/5 * * * *" # run workflow 5 minutes
  #pull_request:
    # types: [closed, assigned, opened, reopened]
 

jobs:
  test-patch-creation: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [1, 2, 3]
    steps:
      - name: Checkout current build before tests
        run: |
          pwd
          ls -a
          git init
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch
          git checkout test-label-2
          git branch --set-upstream-to=origin/test-label-2
          git pull
          ls -a
          echo $RANDOM >> ramdom.txt
          ls -a 
          echo "created new file changes for ramdom.txt"
          git status
          mkdir -p ${{ github.workspace }}/artifact
          git diff > ${{ github.workspace }}/artifact/gitDiff-${{ matrix.node }}.patch
          ls -a
          cat ${{ github.workspace }}/artifact/gitDiff-${{ matrix.node }}.patch

      - name : Upload patch as artifact
        uses: actions/upload-artifact@v2
        with:
            name: gitDiffPatch-${{matrix.node}} #new name for artifacts
            path: ${{ github.workspace }}/artifact/gitDiff-${{ matrix.node }}.patch
            retention-days: 2
      # - name : Download git patch files
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: gitDiffpatch1

  apply-patches:
    
    runs-on: ubuntu-latest
    needs: test-patch-creation
    steps: 
      - name: create download folder for patches
        #id: download-folder
        run: |
          mkdir -p ${{ github.workspace }}/download

      - name: Download patches
        id: download-patches
        uses: actions/download-artifact@v2
        with: 
          path: ${{ github.workspace }}/download/
      
      - name: 'Echo download path'
        run: |
          echo ${{steps.download-patches.outputs.download-path}}
          cd ${{ github.workspace }}/download
          ls -R


            
          