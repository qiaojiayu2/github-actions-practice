name: Actions Workflow

on: [push]

jobs:

#  echo ::set-output name=matrix::{\"node\":$MATRIX}
  test-if:
    runs-on: ubuntu-latest
    steps:
      - name: test if else in bash
        id: test_if
        run: |
          if [ "${{ contains(github.event.push.labels.*.name, 'Force Record') }}" ]; then
            echo "no lable"
          else
            echo "has label"
          fi
         
  
  run-github-actions: 
    runs-on: ubuntu-latest
    steps:
      - name: list files  # list files in VM working directory for WF
        run: |
          pwd
          ls -a
          echo $GITHUB_SHA 
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo "${{ github.token }}"
        #  git clone git@github:$GITHUB_REPOSITORY
        # ^^^  $GITHUB_SHA: SHA of the commit which triggers this workflow

      - name: Checkout # checkout github repo into VM working directory with latest commit which trigger current workflow
        uses: actions/checkout@v2
      - name: list files again after checkout -------
        run: |
          pwd
          ls -a
          echo "test diff" > createDiff2.txt
      - name: test patch------
        run: | 
          git status
          mkdir -p ${{ github.workspace }}/artifact
          git diff HEAD
          echo "crate diff file--------"
          git diff HEAD > ${{ github.workspace }}/artifact/test.patch
          ls -a
          git add .
          echo "added untracked file-------"
          git status
      - name: upload patch file to artifacts ********
        uses: actions/upload-artifact@v2
        with: 
          name: patchFile1
          path: ${{ github.workspace }}/artifact/**/*
      - name: simple javascript action-----
        id: greet  # need to define id for this step so the step follows it can use it for output
        uses: actions/hello-world-javascript-action@v1
        with: # "with" for providing input
          who-to-greet: Yulin  #check doc of action for expected input param name
      - name: Log Greeting Time
        run: echo "${{ steps.greet.ouputs.time }}"
      
